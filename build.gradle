/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'neil' at '1/11/16 4:15 PM' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */
//项目公共设置
allprojects {
// Apply the java plugin to add support for Java
    apply plugin: 'java'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    // In this section you declare where to find the dependencies of your project
    repositories {
        // Use 'jcenter' for resolving your dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
// In this section you declare the dependencies for your production and test code
    dependencies {
        compile 'org.apache.commons:commons-lang3:3.4'
        compile 'org.apache.httpcomponents:httpclient:4.5'
        compile 'log4j:log4j:1.2.17'
        // Declare the dependency for your favourite test framework you want to use in your tests.
        // TestNG is also supported by the Gradle Test task. Just change the
        // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
        // 'test.useTestNG()' to your build script.
        testCompile 'junit:junit:4.12'
    }
}

project(':wechat4j.core'){
    apply plugin: 'war'
    dependencies{
        compile project(':wechat4j.lang')
        compile 'com.alibaba:fastjson:1.2.7'
        providedCompile 'javax.servlet:servlet-api:2.5'// 编译期
        providedRuntime 'javax.servlet:jstl:1.2'    // 运行时
        testCompile 'junit:junit:4.12'
    }
}

project(':wechat4j.lang'){
    dependencies{
        compile 'org.apache.httpcomponents:fluent-hc:4.3.4'
        compile 'org.apache.httpcomponents:httpmime:4.3.5'
        ext.jarTree = fileTree(dir: './lib', include: '**/*.jar')
        compile jarTree
    }
}

task createJavaProject << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}